{"version":3,"sources":["components/FeedbackWidget/Section/Section.module.css","components/FeedbackWidget/Statistics/Statistics.module.css","components/FeedbackWidget/FeedbackOption/FeedbackOptions.module.css","components/FeedbackWidget/Notification/Notification.module.css","App.module.css","components/FeedbackWidget/Statistics/Statistics.js","components/FeedbackWidget/Section/Section.js","components/FeedbackWidget/FeedbackOption/FeedbackOptions.js","components/FeedbackWidget/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","Styles","list","Section","title","children","section","h1","FeedbackOptions","options","onLeaveFeedback","map","option","index","type","button","style","backgroundColor","onClick","Notification","message","container","App","useState","setGood","setNeutral","setBad","totalFeedbacks","prevState","percent","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,GAAK,sB,iBCA1DD,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,kC,gBCA1ED,EAAOC,QAAU,CAAC,UAAY,kC,gBCA9BD,EAAOC,QAAU,CAAC,UAAY,yB,4GCiCfC,EA9BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIC,UAAWC,IAAOC,KAAtB,UACE,6BACE,0CAAaP,EAAb,SAEF,6BACE,6CAAgBC,OAElB,6BACE,yCAAYC,OAEd,6BACE,2CAAcC,OAEhB,6BACE,iEAA6BC,EAA7B,e,gBCHOI,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASL,UAAWC,IAAOK,QAA3B,UACE,oBAAIN,UAAWC,IAAOM,GAAtB,SAA2BH,IAC1BC,M,gBCmBQG,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACX,wBAEEC,KAAK,SACLd,UAAWC,IAAOc,OAClBC,MAAO,CAAEC,gBAAiBL,GAC1BM,QAAS,kBAAMR,EAAgBE,IALjC,SAOGA,GANIC,S,gBCOAM,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,qBAAKpB,UAAWC,IAAOoB,UAAvB,SACE,+BAAOD,O,gBCyDEE,MAzDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAO5B,EAAP,KAAa6B,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAO3B,EAAP,KAAgB6B,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAO1B,EAAP,KAAY6B,EAAZ,KAEMC,EAAiB,WACrB,OAAOhC,EAAOC,EAAUC,GA2B1B,OACE,qBAAKG,UAAWC,IAAOoB,UAAvB,SACE,eAAC,EAAD,CAASjB,MAAM,wBAAf,UACE,cAAC,EAAD,CACEK,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB,SAAAE,GAAM,OAxBP,SAAAA,GACtB,OAAQA,GACN,IAAK,OACHY,GAAQ,SAAAI,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,MACHF,GAAO,SAAAE,GAAS,OAAIA,EAAY,KAChC,MAEF,IAAK,UACHH,GAAW,SAAAG,GAAS,OAAIA,EAAY,KACpC,MAEF,QACE,QAS6BlB,CAAgBE,MAE7C,4CACCe,IAAmB,EAClB,cAAC,EAAD,CACEhC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO6B,IACP5B,mBAtCiB,WACzB,IAAM8B,EAAkB,IAAPlC,EAAcgC,IAC/B,OAAOG,KAAKC,MAAMF,GAoCU9B,KAGtB,cAAC,EAAD,CAAcqB,QAAQ,4B,MCpDhCY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1157454b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__9-2dl\",\"h1\":\"Section_h1__2wj0y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3EDhu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__3om1E\",\"button\":\"FeedbackOptions_button__V9UIi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__3HxxL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__YmTFY\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul className={Styles.list}>\r\n      <li>\r\n        <span>Good: {good} </span>\r\n      </li>\r\n      <li>\r\n        <span>Neutral: {neutral}</span>\r\n      </li>\r\n      <li>\r\n        <span>Bad: {bad}</span>\r\n      </li>\r\n      <li>\r\n        <span>Total: {total}</span>\r\n      </li>\r\n      <li>\r\n        <span>Positive feedback: {`${positivePercentage} %`}</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={Styles.section}>\r\n      <h1 className={Styles.h1}>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map((option, index) => (\r\n        <button\r\n          key={index}\r\n          type=\"button\"\r\n          className={Styles.button}\r\n          style={{ backgroundColor: option }}\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div className={Styles.container}>\r\n      <span>{message}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import { useState } from 'react';\nimport Statistics from './components/FeedbackWidget/Statistics';\nimport Section from './components/FeedbackWidget/Section';\nimport FeedbackOptions from './components/FeedbackWidget/FeedbackOption';\nimport Notification from './components/FeedbackWidget/Notification';\nimport Styles from './App.module.css';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const totalFeedbacks = () => {\n    return good + neutral + bad;\n  };\n\n  const positivePercentage = () => {\n    const percent = (good * 100) / totalFeedbacks();\n    return Math.round(percent);\n  };\n\n  const onLeaveFeedback = option => {\n    switch (option) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div className={Styles.container}>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={option => onLeaveFeedback(option)}\n        />\n        <h2>Statistics</h2>\n        {totalFeedbacks() > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedbacks()}\n            positivePercentage={positivePercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}